{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2","program":"C:\\Users\\rafat\\.rustup\\toolchains\\nightly-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=84683962ff8e0301","-C","extra-filename=-84683962ff8e0301","--out-dir","c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libcfg_if-75c9242008b9072d.rmeta","--extern","crossbeam_utils=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libcrossbeam_utils-3cdbeff74e20849b.rmeta","--extern","lazy_static=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\liblazy_static-6c24f112699102ad.rmeta","--extern","maybe_uninit=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libmaybe_uninit-b12950df137d453e.rmeta","--extern","memoffset=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libmemoffset-fa1ca0b5fd7945b6.rmeta","--extern","scopeguard=c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libscopeguard-918914b84a0480f4.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","C:\\Users\\rafat\\.rustup/toolchains/nightly-x86_64-pc-windows-msvc"],"output":"c:\\Users\\rafat\\dt-instance\\target\\rls\\debug\\deps\\libcrossbeam_epoch-84683962ff8e0301.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[12404430155787115533,12631207490523583307]},"crate_root":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src","external_crates":[{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[18288881757689090121,9419737486893313901]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[14213619342689192713,15088536995624829400]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[244939429982917557,17416797231968220338]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14317763785426805453,5211879464951989797]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16422418778299216526,17207051225670732338]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[17306314435355081657,11195041620083223393]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1573703505585426212,7163609454926384372]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12479693318245447873,11762408771930065524]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[13307518198829802953,2695921345460214220]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[16906543842776722203,11322133077543445249]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[9131476741001934248,9345293261506072414]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13524165811214674457,13541977140981627092]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14352779422789734697,5487940749699149244]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":14,"id":{"name":"cfg_if","disambiguator":[6499983590945495559,2597391396148318010]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":15,"id":{"name":"maybe_uninit","disambiguator":[1882778716552198625,12494968727988528927]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":16,"id":{"name":"crossbeam_utils","disambiguator":[4132681929538494223,11450042708952191304]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":17,"id":{"name":"lazy_static","disambiguator":[18051500654698884544,7788645864697619818]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":18,"id":{"name":"memoffset","disambiguator":[2414240029177563922,11823358867640184383]}},{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":19,"id":{"name":"scopeguard","disambiguator":[3042749017531682349,6376528877346825496]}}],"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3757,"byte_end":3763,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3765,"byte_end":3783,"line_start":94,"line_end":94,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3785,"byte_end":3806,"line_start":94,"line_end":94,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3808,"byte_end":3813,"line_start":94,"line_end":94,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3815,"byte_end":3822,"line_start":94,"line_end":94,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3824,"byte_end":3830,"line_start":94,"line_end":94,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3867,"byte_end":3876,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3878,"byte_end":3889,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3922,"byte_end":3933,"line_start":96,"line_end":96,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3935,"byte_end":3940,"line_start":96,"line_end":96,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4104,"byte_end":4121,"line_start":106,"line_end":106,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4123,"byte_end":4132,"line_start":106,"line_end":106,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4134,"byte_end":4137,"line_start":106,"line_end":106,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":243},{"krate":0,"index":274},{"krate":0,"index":298},{"krate":0,"index":314},{"krate":0,"index":347},{"krate":0,"index":438},{"krate":0,"index":525},{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":612}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"! Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"! Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"! that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"! reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"! garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"! anymore.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"! This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"! element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"! marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"! epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"! can be referencing it anymore.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"! more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"! users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! # Pointers","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"! is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"! [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"! read.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! # Pinning","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"! Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"! we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"! yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"! unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # Garbage","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"! pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"! storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"! There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"! arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"! structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"! # APIs","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"! want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"! [`Collector`]: struct.Collector.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"! [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"! [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"! [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2821,"byte_end":2866,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2868,"byte_end":2890,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2891,"byte_end":2930,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6723817,"byte_end":6723835,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6723746,"byte_end":6723805,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6723949,"byte_end":6723956,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6723868,"byte_end":6723940,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724042,"byte_end":6724045,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6723978,"byte_end":6724033,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":41},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724930,"byte_end":6724951,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":42},{"krate":0,"index":43}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724360,"byte_end":6724412,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724413,"byte_end":6724416,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724417,"byte_end":6724508,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724509,"byte_end":6724601,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724602,"byte_end":6724605,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724606,"byte_end":6724671,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724672,"byte_end":6724675,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724676,"byte_end":6724770,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724771,"byte_end":6724797,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724798,"byte_end":6724890,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724891,"byte_end":6724919,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725017,"byte_end":6725024,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"fn (&self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724958,"byte_end":6725009,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":43},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725242,"byte_end":6725249,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"fn (&self) -> Ordering","parent":{"krate":0,"index":41},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725050,"byte_end":6725098,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725103,"byte_end":6725106,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725111,"byte_end":6725204,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725209,"byte_end":6725234,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727021,"byte_end":6727027,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726582,"byte_end":6726646,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726647,"byte_end":6726650,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726651,"byte_end":6726749,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726750,"byte_end":6726842,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726843,"byte_end":6726887,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726888,"byte_end":6726891,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726892,"byte_end":6726972,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726973,"byte_end":6726976,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6726977,"byte_end":6727009,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728029,"byte_end":6728033,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"fn () -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727801,"byte_end":6727839,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727844,"byte_end":6727847,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727852,"byte_end":6727866,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727871,"byte_end":6727874,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727879,"byte_end":6727886,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727891,"byte_end":6727923,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727928,"byte_end":6727931,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727936,"byte_end":6727970,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727975,"byte_end":6727982,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727987,"byte_end":6728011,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728393,"byte_end":6728396,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"fn (value: T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728160,"byte_end":6728242,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728247,"byte_end":6728250,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728255,"byte_end":6728269,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728274,"byte_end":6728277,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728282,"byte_end":6728289,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728294,"byte_end":6728326,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728331,"byte_end":6728334,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728339,"byte_end":6728369,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728374,"byte_end":6728381,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729020,"byte_end":6729024,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"fn <'g> (&self, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728471,"byte_end":6728516,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728521,"byte_end":6728524,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728529,"byte_end":6728619,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728624,"byte_end":6728638,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728643,"byte_end":6728646,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728651,"byte_end":6728729,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728734,"byte_end":6728737,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728742,"byte_end":6728756,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728761,"byte_end":6728764,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728769,"byte_end":6728776,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728781,"byte_end":6728830,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728835,"byte_end":6728879,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728884,"byte_end":6728887,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728892,"byte_end":6728922,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728927,"byte_end":6728957,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6728962,"byte_end":6728996,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729001,"byte_end":6729008,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730031,"byte_end":6730043,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"fn <'g> (&self, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729154,"byte_end":6729233,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729238,"byte_end":6729241,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729246,"byte_end":6729319,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729324,"byte_end":6729400,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729405,"byte_end":6729476,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729481,"byte_end":6729555,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729560,"byte_end":6729583,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729588,"byte_end":6729591,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729596,"byte_end":6729671,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729676,"byte_end":6729750,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729755,"byte_end":6729789,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729794,"byte_end":6729797,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729802,"byte_end":6729816,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729821,"byte_end":6729824,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729829,"byte_end":6729836,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729841,"byte_end":6729890,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729895,"byte_end":6729898,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729903,"byte_end":6729933,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729938,"byte_end":6729968,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6729973,"byte_end":6730007,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730012,"byte_end":6730019,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730757,"byte_end":6730762,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"fn <'g, P> (&self, new: P, ord: Ordering) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730163,"byte_end":6730228,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730233,"byte_end":6730236,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730241,"byte_end":6730331,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730336,"byte_end":6730350,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730355,"byte_end":6730358,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730363,"byte_end":6730441,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730446,"byte_end":6730449,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730454,"byte_end":6730468,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730473,"byte_end":6730476,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730481,"byte_end":6730488,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730493,"byte_end":6730557,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730562,"byte_end":6730606,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730611,"byte_end":6730614,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730619,"byte_end":6730649,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730654,"byte_end":6730690,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730695,"byte_end":6730733,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730738,"byte_end":6730745,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731514,"byte_end":6731518,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"fn <'g, P> (&self, new: P, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730873,"byte_end":6730961,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730966,"byte_end":6730979,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730984,"byte_end":6730987,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6730992,"byte_end":6731082,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731087,"byte_end":6731101,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731106,"byte_end":6731109,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731114,"byte_end":6731192,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731197,"byte_end":6731200,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731205,"byte_end":6731219,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731224,"byte_end":6731227,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731232,"byte_end":6731239,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731244,"byte_end":6731308,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731313,"byte_end":6731357,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731362,"byte_end":6731365,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731370,"byte_end":6731400,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731405,"byte_end":6731435,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731440,"byte_end":6731490,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731495,"byte_end":6731502,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732865,"byte_end":6732880,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"fn <'g, O, P> (&self, current: Shared<T>, new: P, ord: O, _: &'g Guard) -> Result<Shared<'g, T>, CompareAndSetError<'g, T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731689,"byte_end":6731785,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731790,"byte_end":6731884,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731889,"byte_end":6731960,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731965,"byte_end":6731968,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6731973,"byte_end":6732068,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732073,"byte_end":6732164,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732169,"byte_end":6732182,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732187,"byte_end":6732190,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732195,"byte_end":6732280,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732285,"byte_end":6732316,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732321,"byte_end":6732324,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732329,"byte_end":6732392,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732397,"byte_end":6732400,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732405,"byte_end":6732419,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732424,"byte_end":6732427,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732432,"byte_end":6732439,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732444,"byte_end":6732508,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732513,"byte_end":6732557,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732562,"byte_end":6732565,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732570,"byte_end":6732600,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732605,"byte_end":6732608,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732613,"byte_end":6732643,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732648,"byte_end":6732689,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732694,"byte_end":6732764,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732769,"byte_end":6732841,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6732846,"byte_end":6732853,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735431,"byte_end":6735451,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"fn <'g, O, P> (&self, current: Shared<T>, new: P, ord: O, _: &'g Guard) -> Result<Shared<'g, T>, CompareAndSetError<'g, T, P>>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733545,"byte_end":6733641,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733646,"byte_end":6733740,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733745,"byte_end":6733816,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733821,"byte_end":6733824,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733829,"byte_end":6733923,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6733928,"byte_end":6734023,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734028,"byte_end":6734118,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734123,"byte_end":6734207,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734212,"byte_end":6734215,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734220,"byte_end":6734305,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734310,"byte_end":6734341,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734346,"byte_end":6734349,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734354,"byte_end":6734420,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734425,"byte_end":6734488,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734493,"byte_end":6734496,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734501,"byte_end":6734515,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734520,"byte_end":6734523,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734528,"byte_end":6734535,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734540,"byte_end":6734604,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734609,"byte_end":6734653,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734658,"byte_end":6734661,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734666,"byte_end":6734696,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734701,"byte_end":6734731,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734736,"byte_end":6734739,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734744,"byte_end":6734779,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734784,"byte_end":6734824,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734829,"byte_end":6734839,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734844,"byte_end":6734907,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734912,"byte_end":6734934,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734939,"byte_end":6734963,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734968,"byte_end":6734990,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6734995,"byte_end":6735008,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735013,"byte_end":6735038,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735043,"byte_end":6735077,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735082,"byte_end":6735112,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735117,"byte_end":6735130,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735135,"byte_end":6735144,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735149,"byte_end":6735154,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735159,"byte_end":6735162,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735167,"byte_end":6735208,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735213,"byte_end":6735223,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735228,"byte_end":6735303,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735308,"byte_end":6735335,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735340,"byte_end":6735383,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735388,"byte_end":6735397,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735402,"byte_end":6735407,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6735412,"byte_end":6735419,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736943,"byte_end":6736952,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736121,"byte_end":6736160,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736165,"byte_end":6736168,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736173,"byte_end":6736267,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736272,"byte_end":6736328,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736333,"byte_end":6736336,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736341,"byte_end":6736431,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736436,"byte_end":6736450,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736455,"byte_end":6736458,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736463,"byte_end":6736541,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736546,"byte_end":6736549,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736554,"byte_end":6736568,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736573,"byte_end":6736576,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736581,"byte_end":6736588,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736593,"byte_end":6736650,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736655,"byte_end":6736699,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736704,"byte_end":6736707,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736712,"byte_end":6736772,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736777,"byte_end":6736807,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736812,"byte_end":6736867,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736872,"byte_end":6736919,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6736924,"byte_end":6736931,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737942,"byte_end":6737950,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737123,"byte_end":6737161,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737166,"byte_end":6737169,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737174,"byte_end":6737267,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737272,"byte_end":6737328,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737333,"byte_end":6737336,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737341,"byte_end":6737431,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737436,"byte_end":6737450,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737455,"byte_end":6737458,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737463,"byte_end":6737541,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737546,"byte_end":6737549,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737554,"byte_end":6737568,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737573,"byte_end":6737576,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737581,"byte_end":6737588,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737593,"byte_end":6737650,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737655,"byte_end":6737699,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737704,"byte_end":6737707,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737712,"byte_end":6737772,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737777,"byte_end":6737807,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737812,"byte_end":6737866,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737871,"byte_end":6737918,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6737923,"byte_end":6737930,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738941,"byte_end":6738950,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"fn <'g> (&self, val: usize, ord: Ordering, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738119,"byte_end":6738158,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738163,"byte_end":6738166,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738171,"byte_end":6738265,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738270,"byte_end":6738326,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738331,"byte_end":6738334,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738339,"byte_end":6738429,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738434,"byte_end":6738448,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738453,"byte_end":6738456,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738461,"byte_end":6738539,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738544,"byte_end":6738547,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738552,"byte_end":6738566,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738571,"byte_end":6738574,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738579,"byte_end":6738586,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738591,"byte_end":6738648,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738653,"byte_end":6738697,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738702,"byte_end":6738705,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738710,"byte_end":6738770,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738775,"byte_end":6738805,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738810,"byte_end":6738865,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738870,"byte_end":6738917,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6738922,"byte_end":6738929,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740247,"byte_end":6740257,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"fn (self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739120,"byte_end":6739155,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739160,"byte_end":6739163,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739168,"byte_end":6739257,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739262,"byte_end":6739348,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739353,"byte_end":6739388,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739393,"byte_end":6739396,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739401,"byte_end":6739413,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739418,"byte_end":6739421,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739426,"byte_end":6739485,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739490,"byte_end":6739493,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739498,"byte_end":6739510,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739515,"byte_end":6739518,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739523,"byte_end":6739610,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739615,"byte_end":6739648,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739653,"byte_end":6739656,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739661,"byte_end":6739675,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739680,"byte_end":6739683,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739688,"byte_end":6739699,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739704,"byte_end":6739723,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739728,"byte_end":6739762,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739767,"byte_end":6739793,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739798,"byte_end":6739825,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739830,"byte_end":6739835,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739840,"byte_end":6739843,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739848,"byte_end":6739881,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739886,"byte_end":6739914,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6739919,"byte_end":6740013,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740018,"byte_end":6740065,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740070,"byte_end":6740090,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740095,"byte_end":6740174,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740179,"byte_end":6740192,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740197,"byte_end":6740206,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740211,"byte_end":6740216,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740221,"byte_end":6740228,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":128},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742727,"byte_end":6742734,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742664,"byte_end":6742716,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742806,"byte_end":6742816,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"fn (self) -> usize","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742744,"byte_end":6742798,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742917,"byte_end":6742927,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"fn (data: usize) -> Self","parent":{"krate":0,"index":128},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742838,"byte_end":6742902,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743193,"byte_end":6743198,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742953,"byte_end":6742988,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742989,"byte_end":6742992,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742993,"byte_end":6743035,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743036,"byte_end":6743039,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743040,"byte_end":6743138,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743139,"byte_end":6743181,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744044,"byte_end":6744047,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"fn (value: T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743814,"byte_end":6743895,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743900,"byte_end":6743903,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743908,"byte_end":6743922,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743927,"byte_end":6743930,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743935,"byte_end":6743942,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743947,"byte_end":6743978,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743983,"byte_end":6743986,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743991,"byte_end":6744020,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744025,"byte_end":6744032,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744681,"byte_end":6744689,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"fn (raw: *mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744119,"byte_end":6744169,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744174,"byte_end":6744177,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744182,"byte_end":6744274,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744279,"byte_end":6744372,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744377,"byte_end":6744402,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744407,"byte_end":6744410,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744415,"byte_end":6744427,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744432,"byte_end":6744435,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744440,"byte_end":6744484,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744489,"byte_end":6744492,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744497,"byte_end":6744511,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744516,"byte_end":6744519,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744524,"byte_end":6744531,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744536,"byte_end":6744567,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744572,"byte_end":6744575,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744580,"byte_end":6744650,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744655,"byte_end":6744662,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745131,"byte_end":6745142,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"fn <'g> (self, _: &'g Guard) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744796,"byte_end":6744845,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744850,"byte_end":6744853,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744858,"byte_end":6744872,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744877,"byte_end":6744880,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744885,"byte_end":6744892,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744897,"byte_end":6744945,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744950,"byte_end":6744953,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744958,"byte_end":6744987,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6744992,"byte_end":6745022,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745027,"byte_end":6745060,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745065,"byte_end":6745072,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745077,"byte_end":6745080,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745085,"byte_end":6745119,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745534,"byte_end":6745542,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"fn (self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745254,"byte_end":6745298,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745303,"byte_end":6745306,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745311,"byte_end":6745325,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745330,"byte_end":6745333,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745338,"byte_end":6745345,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745350,"byte_end":6745398,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745403,"byte_end":6745406,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745411,"byte_end":6745440,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745445,"byte_end":6745480,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745485,"byte_end":6745510,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745515,"byte_end":6745522,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745900,"byte_end":6745903,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745692,"byte_end":6745738,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745743,"byte_end":6745746,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745751,"byte_end":6745765,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745770,"byte_end":6745773,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745778,"byte_end":6745785,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745790,"byte_end":6745821,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745826,"byte_end":6745829,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745834,"byte_end":6745876,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6745881,"byte_end":6745888,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746377,"byte_end":6746385,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"fn (self, tag: usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746000,"byte_end":6746090,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746095,"byte_end":6746133,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746138,"byte_end":6746141,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746146,"byte_end":6746160,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746165,"byte_end":6746168,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746173,"byte_end":6746180,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746185,"byte_end":6746216,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746221,"byte_end":6746224,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746229,"byte_end":6746258,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746263,"byte_end":6746290,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746295,"byte_end":6746321,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746326,"byte_end":6746353,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746358,"byte_end":6746365,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748665,"byte_end":6748671,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748386,"byte_end":6748439,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748440,"byte_end":6748443,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748444,"byte_end":6748507,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748508,"byte_end":6748511,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748512,"byte_end":6748610,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748611,"byte_end":6748653,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749478,"byte_end":6749482,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"fn () -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749262,"byte_end":6749293,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749298,"byte_end":6749301,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749306,"byte_end":6749320,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749325,"byte_end":6749328,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749333,"byte_end":6749340,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749345,"byte_end":6749377,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749382,"byte_end":6749385,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749390,"byte_end":6749424,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749429,"byte_end":6749454,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749459,"byte_end":6749466,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750039,"byte_end":6750046,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749597,"byte_end":6749639,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749644,"byte_end":6749647,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749652,"byte_end":6749666,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749671,"byte_end":6749674,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749679,"byte_end":6749686,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749691,"byte_end":6749747,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749752,"byte_end":6749796,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749801,"byte_end":6749804,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749809,"byte_end":6749836,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749841,"byte_end":6749871,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749876,"byte_end":6749921,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749926,"byte_end":6749964,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749969,"byte_end":6750015,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750020,"byte_end":6750027,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750577,"byte_end":6750583,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"fn (&self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750107,"byte_end":6750167,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750172,"byte_end":6750175,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750180,"byte_end":6750194,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750199,"byte_end":6750202,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750207,"byte_end":6750214,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750219,"byte_end":6750275,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750280,"byte_end":6750324,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750329,"byte_end":6750332,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750337,"byte_end":6750366,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750371,"byte_end":6750401,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750406,"byte_end":6750434,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750439,"byte_end":6750442,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750447,"byte_end":6750477,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750482,"byte_end":6750516,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750521,"byte_end":6750553,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750558,"byte_end":6750565,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751862,"byte_end":6751867,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"fn (&self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750683,"byte_end":6750712,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750717,"byte_end":6750720,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750725,"byte_end":6750803,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750808,"byte_end":6750811,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750816,"byte_end":6750828,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750833,"byte_end":6750836,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750841,"byte_end":6750926,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750931,"byte_end":6750934,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6750939,"byte_end":6751029,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751034,"byte_end":6751083,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751088,"byte_end":6751091,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751096,"byte_end":6751168,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751173,"byte_end":6751248,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751253,"byte_end":6751256,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751261,"byte_end":6751354,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751359,"byte_end":6751452,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751457,"byte_end":6751495,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751500,"byte_end":6751503,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751508,"byte_end":6751522,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751527,"byte_end":6751530,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751535,"byte_end":6751542,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751547,"byte_end":6751596,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751601,"byte_end":6751645,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751650,"byte_end":6751653,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751658,"byte_end":6751688,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751693,"byte_end":6751723,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751728,"byte_end":6751762,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751767,"byte_end":6751779,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751784,"byte_end":6751821,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751826,"byte_end":6751831,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751836,"byte_end":6751843,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753081,"byte_end":6753090,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"fn (&mut self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751921,"byte_end":6751950,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751955,"byte_end":6751958,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6751963,"byte_end":6752049,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752054,"byte_end":6752057,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752062,"byte_end":6752074,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752079,"byte_end":6752082,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752087,"byte_end":6752182,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752187,"byte_end":6752224,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752229,"byte_end":6752232,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752237,"byte_end":6752326,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752331,"byte_end":6752334,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752339,"byte_end":6752413,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752418,"byte_end":6752421,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752426,"byte_end":6752440,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752445,"byte_end":6752448,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752453,"byte_end":6752460,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752465,"byte_end":6752514,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752519,"byte_end":6752563,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752568,"byte_end":6752571,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752576,"byte_end":6752618,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752623,"byte_end":6752653,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752658,"byte_end":6752661,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752666,"byte_end":6752704,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752709,"byte_end":6752721,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752726,"byte_end":6752756,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752761,"byte_end":6752791,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752796,"byte_end":6752837,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752842,"byte_end":6752860,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752865,"byte_end":6752909,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752914,"byte_end":6752919,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752924,"byte_end":6752927,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752932,"byte_end":6752966,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752971,"byte_end":6752983,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6752988,"byte_end":6753040,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753045,"byte_end":6753050,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753055,"byte_end":6753062,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754382,"byte_end":6754388,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"fn (&self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753168,"byte_end":6753208,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753213,"byte_end":6753216,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753221,"byte_end":6753316,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753321,"byte_end":6753324,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753329,"byte_end":6753341,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753346,"byte_end":6753349,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753354,"byte_end":6753439,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753444,"byte_end":6753447,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753452,"byte_end":6753542,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753547,"byte_end":6753596,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753601,"byte_end":6753604,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753609,"byte_end":6753681,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753686,"byte_end":6753761,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753766,"byte_end":6753769,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753774,"byte_end":6753867,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753872,"byte_end":6753965,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6753970,"byte_end":6754008,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754013,"byte_end":6754016,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754021,"byte_end":6754035,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754040,"byte_end":6754043,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754048,"byte_end":6754055,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754060,"byte_end":6754109,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754114,"byte_end":6754158,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754163,"byte_end":6754166,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754171,"byte_end":6754201,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754206,"byte_end":6754236,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754241,"byte_end":6754275,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754280,"byte_end":6754292,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754297,"byte_end":6754341,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754346,"byte_end":6754351,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754356,"byte_end":6754363,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755127,"byte_end":6755137,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"fn (self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754457,"byte_end":6754492,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754497,"byte_end":6754500,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754505,"byte_end":6754517,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754522,"byte_end":6754525,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754530,"byte_end":6754589,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754594,"byte_end":6754597,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754602,"byte_end":6754614,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754619,"byte_end":6754622,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754627,"byte_end":6754714,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754719,"byte_end":6754752,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754757,"byte_end":6754760,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754765,"byte_end":6754779,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754784,"byte_end":6754787,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754792,"byte_end":6754799,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754804,"byte_end":6754853,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754858,"byte_end":6754902,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754907,"byte_end":6754910,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754915,"byte_end":6754945,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754950,"byte_end":6754962,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6754967,"byte_end":6755009,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755014,"byte_end":6755052,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755057,"byte_end":6755086,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755091,"byte_end":6755096,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755101,"byte_end":6755108,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755744,"byte_end":6755747,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755336,"byte_end":6755382,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755387,"byte_end":6755390,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755395,"byte_end":6755409,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755414,"byte_end":6755417,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755422,"byte_end":6755429,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755434,"byte_end":6755490,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755495,"byte_end":6755539,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755544,"byte_end":6755547,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755552,"byte_end":6755614,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755619,"byte_end":6755649,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755654,"byte_end":6755688,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755693,"byte_end":6755720,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755725,"byte_end":6755732,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756422,"byte_end":6756430,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"fn (&self, tag: usize) -> Shared<'g, T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755844,"byte_end":6755934,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755939,"byte_end":6755977,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755982,"byte_end":6755985,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6755990,"byte_end":6756004,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756009,"byte_end":6756012,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756017,"byte_end":6756024,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756029,"byte_end":6756078,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756083,"byte_end":6756127,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756132,"byte_end":6756135,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756140,"byte_end":6756170,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756175,"byte_end":6756205,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756210,"byte_end":6756245,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756250,"byte_end":6756278,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756283,"byte_end":6756286,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756291,"byte_end":6756319,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756324,"byte_end":6756352,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756357,"byte_end":6756398,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756403,"byte_end":6756410,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758758,"byte_end":6758767,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":251}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758709,"byte_end":6758746,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758939,"byte_end":6758942,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758899,"byte_end":6758927,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759098,"byte_end":6759106,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"fn (&self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759041,"byte_end":6759086,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":264},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759770,"byte_end":6759781,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":265}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759722,"byte_end":6759758,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759892,"byte_end":6759895,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"fn (&self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759846,"byte_end":6759866,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759871,"byte_end":6759880,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760033,"byte_end":6760042,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759964,"byte_end":6760007,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760012,"byte_end":6760021,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":269},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760198,"byte_end":6760207,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"fn (&self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760116,"byte_end":6760172,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760177,"byte_end":6760186,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":321},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778829,"byte_end":6778834,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":322}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777105,"byte_end":6777154,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777155,"byte_end":6777158,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777159,"byte_end":6777172,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777173,"byte_end":6777176,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777177,"byte_end":6777256,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777257,"byte_end":6777260,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777261,"byte_end":6777268,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777269,"byte_end":6777302,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777303,"byte_end":6777306,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777307,"byte_end":6777405,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777406,"byte_end":6777498,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777499,"byte_end":6777529,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777530,"byte_end":6777537,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777538,"byte_end":6777541,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777542,"byte_end":6777618,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777619,"byte_end":6777622,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777623,"byte_end":6777650,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777651,"byte_end":6777654,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777655,"byte_end":6777742,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777743,"byte_end":6777759,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777760,"byte_end":6777763,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777764,"byte_end":6777771,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777772,"byte_end":6777828,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777829,"byte_end":6777873,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777874,"byte_end":6777877,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777878,"byte_end":6777916,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777917,"byte_end":6777946,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777947,"byte_end":6777950,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777951,"byte_end":6777981,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6777982,"byte_end":6778012,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778013,"byte_end":6778016,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778017,"byte_end":6778091,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778092,"byte_end":6778126,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778127,"byte_end":6778130,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778131,"byte_end":6778182,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778183,"byte_end":6778229,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778230,"byte_end":6778273,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778274,"byte_end":6778279,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778280,"byte_end":6778287,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778288,"byte_end":6778291,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778292,"byte_end":6778313,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778314,"byte_end":6778317,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778318,"byte_end":6778413,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778414,"byte_end":6778512,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778513,"byte_end":6778532,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778533,"byte_end":6778536,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778537,"byte_end":6778544,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778545,"byte_end":6778578,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778579,"byte_end":6778582,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778583,"byte_end":6778613,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778614,"byte_end":6778644,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778645,"byte_end":6778677,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778678,"byte_end":6778695,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778696,"byte_end":6778728,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778729,"byte_end":6778746,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778747,"byte_end":6778780,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778781,"byte_end":6778788,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778789,"byte_end":6778792,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778793,"byte_end":6778817,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779862,"byte_end":6779867,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778893,"byte_end":6778982,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778987,"byte_end":6779012,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779017,"byte_end":6779020,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779025,"byte_end":6779118,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779123,"byte_end":6779211,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779216,"byte_end":6779306,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779311,"byte_end":6779351,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779356,"byte_end":6779359,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779364,"byte_end":6779454,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779459,"byte_end":6779550,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779555,"byte_end":6779642,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779647,"byte_end":6779667,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779672,"byte_end":6779675,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779680,"byte_end":6779767,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779772,"byte_end":6779797,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779802,"byte_end":6779805,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6779810,"byte_end":6779850,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784220,"byte_end":6784235,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"fn <F, R> (&self, f: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780031,"byte_end":6780120,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780125,"byte_end":6780150,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780155,"byte_end":6780158,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780163,"byte_end":6780256,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780261,"byte_end":6780349,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780354,"byte_end":6780444,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780449,"byte_end":6780489,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780494,"byte_end":6780497,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780502,"byte_end":6780592,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780597,"byte_end":6780688,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780693,"byte_end":6780780,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780785,"byte_end":6780805,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780810,"byte_end":6780813,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780818,"byte_end":6780905,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780910,"byte_end":6780935,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780940,"byte_end":6780943,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780948,"byte_end":6780960,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780965,"byte_end":6780968,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6780973,"byte_end":6781065,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781070,"byte_end":6781157,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781162,"byte_end":6781174,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781179,"byte_end":6781182,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781187,"byte_end":6781194,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781199,"byte_end":6781232,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781237,"byte_end":6781240,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781245,"byte_end":6781275,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781280,"byte_end":6781307,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781312,"byte_end":6781324,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781329,"byte_end":6781404,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781409,"byte_end":6781448,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781453,"byte_end":6781489,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781494,"byte_end":6781505,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781510,"byte_end":6781515,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781520,"byte_end":6781527,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781532,"byte_end":6781535,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781540,"byte_end":6781634,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781639,"byte_end":6781670,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781675,"byte_end":6781678,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781683,"byte_end":6781778,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781783,"byte_end":6781875,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781880,"byte_end":6781969,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781974,"byte_end":6781977,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6781982,"byte_end":6781995,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782000,"byte_end":6782053,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782058,"byte_end":6782140,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782145,"byte_end":6782152,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782157,"byte_end":6782160,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782165,"byte_end":6782258,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782263,"byte_end":6782358,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782363,"byte_end":6782423,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782428,"byte_end":6782431,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782436,"byte_end":6782450,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782455,"byte_end":6782458,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782463,"byte_end":6782549,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782554,"byte_end":6782648,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782653,"byte_end":6782749,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782754,"byte_end":6782846,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782851,"byte_end":6782907,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782912,"byte_end":6782915,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782920,"byte_end":6782927,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782932,"byte_end":6782988,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6782993,"byte_end":6783037,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783042,"byte_end":6783045,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783050,"byte_end":6783081,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783086,"byte_end":6783089,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783094,"byte_end":6783171,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783176,"byte_end":6783207,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783212,"byte_end":6783215,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783220,"byte_end":6783250,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783255,"byte_end":6783285,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783290,"byte_end":6783293,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783298,"byte_end":6783375,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783380,"byte_end":6783452,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783457,"byte_end":6783460,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783465,"byte_end":6783486,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783491,"byte_end":6783551,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783556,"byte_end":6783638,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783643,"byte_end":6783659,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783664,"byte_end":6783743,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783748,"byte_end":6783791,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783796,"byte_end":6783864,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783869,"byte_end":6783961,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6783966,"byte_end":6784050,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784055,"byte_end":6784092,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784097,"byte_end":6784112,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784117,"byte_end":6784126,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784131,"byte_end":6784136,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784141,"byte_end":6784148,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784153,"byte_end":6784156,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784161,"byte_end":6784201,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787875,"byte_end":6787888,"line_start":271,"line_end":271,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"fn <T> (&self, ptr: Shared<T>) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784474,"byte_end":6784567,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784572,"byte_end":6784624,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784629,"byte_end":6784632,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784637,"byte_end":6784730,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784735,"byte_end":6784825,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784830,"byte_end":6784919,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784924,"byte_end":6784978,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784983,"byte_end":6784986,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6784991,"byte_end":6785084,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785089,"byte_end":6785182,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785187,"byte_end":6785280,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785285,"byte_end":6785316,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785321,"byte_end":6785324,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785329,"byte_end":6785418,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785423,"byte_end":6785448,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785453,"byte_end":6785456,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785461,"byte_end":6785473,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785478,"byte_end":6785481,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785486,"byte_end":6785579,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785584,"byte_end":6785617,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785622,"byte_end":6785625,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785630,"byte_end":6785725,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785730,"byte_end":6785768,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785773,"byte_end":6785776,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785781,"byte_end":6785876,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785881,"byte_end":6785973,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6785978,"byte_end":6786067,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786072,"byte_end":6786075,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786080,"byte_end":6786093,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786098,"byte_end":6786151,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786156,"byte_end":6786215,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786220,"byte_end":6786227,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786232,"byte_end":6786235,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786240,"byte_end":6786334,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786339,"byte_end":6786426,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786431,"byte_end":6786491,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786496,"byte_end":6786499,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786504,"byte_end":6786518,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786523,"byte_end":6786526,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786531,"byte_end":6786617,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786622,"byte_end":6786716,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786721,"byte_end":6786817,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786822,"byte_end":6786914,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786919,"byte_end":6786975,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786980,"byte_end":6786983,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6786988,"byte_end":6786995,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787000,"byte_end":6787056,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787061,"byte_end":6787105,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787110,"byte_end":6787113,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787118,"byte_end":6787149,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787154,"byte_end":6787157,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787162,"byte_end":6787239,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787244,"byte_end":6787275,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787280,"byte_end":6787283,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787288,"byte_end":6787318,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787323,"byte_end":6787353,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787358,"byte_end":6787361,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787366,"byte_end":6787443,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787448,"byte_end":6787520,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787525,"byte_end":6787528,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787533,"byte_end":6787554,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787559,"byte_end":6787619,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787624,"byte_end":6787706,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787711,"byte_end":6787727,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787732,"byte_end":6787767,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787772,"byte_end":6787781,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787786,"byte_end":6787791,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787796,"byte_end":6787803,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787808,"byte_end":6787811,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787816,"byte_end":6787856,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":334},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788861,"byte_end":6788866,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"fn (&self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6787984,"byte_end":6788079,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788084,"byte_end":6788101,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788106,"byte_end":6788109,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788114,"byte_end":6788208,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788213,"byte_end":6788305,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788310,"byte_end":6788378,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788383,"byte_end":6788386,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788391,"byte_end":6788483,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788488,"byte_end":6788491,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788496,"byte_end":6788510,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788515,"byte_end":6788518,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788523,"byte_end":6788530,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788535,"byte_end":6788568,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788573,"byte_end":6788576,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788581,"byte_end":6788611,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788616,"byte_end":6788628,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788633,"byte_end":6788662,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788667,"byte_end":6788735,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788740,"byte_end":6788751,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788756,"byte_end":6788761,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788766,"byte_end":6788784,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788789,"byte_end":6788796,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788801,"byte_end":6788804,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788809,"byte_end":6788849,"line_start":298,"line_end":298,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790139,"byte_end":6790144,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6788990,"byte_end":6789041,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789046,"byte_end":6789049,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789054,"byte_end":6789144,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789149,"byte_end":6789243,"line_start":308,"line_end":308,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789248,"byte_end":6789342,"line_start":309,"line_end":309,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789347,"byte_end":6789399,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789404,"byte_end":6789407,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789412,"byte_end":6789505,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789510,"byte_end":6789513,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789518,"byte_end":6789532,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789537,"byte_end":6789540,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789545,"byte_end":6789552,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789557,"byte_end":6789606,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789611,"byte_end":6789655,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789660,"byte_end":6789680,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789685,"byte_end":6789713,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789718,"byte_end":6789721,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789726,"byte_end":6789755,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789760,"byte_end":6789793,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789798,"byte_end":6789803,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789808,"byte_end":6789847,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789852,"byte_end":6789906,"line_start":326,"line_end":326,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789911,"byte_end":6789916,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789921,"byte_end":6789939,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789944,"byte_end":6789949,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789954,"byte_end":6789993,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6789998,"byte_end":6790052,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790057,"byte_end":6790062,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790067,"byte_end":6790074,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790079,"byte_end":6790082,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790087,"byte_end":6790127,"line_start":335,"line_end":335,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791524,"byte_end":6791535,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"fn <F, R> (&mut self, f: F) -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790268,"byte_end":6790359,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790364,"byte_end":6790367,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790372,"byte_end":6790463,"line_start":344,"line_end":344,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790468,"byte_end":6790564,"line_start":345,"line_end":345,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790569,"byte_end":6790663,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790668,"byte_end":6790687,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790692,"byte_end":6790695,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790700,"byte_end":6790794,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790799,"byte_end":6790841,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790846,"byte_end":6790849,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790854,"byte_end":6790868,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790873,"byte_end":6790876,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790881,"byte_end":6790888,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790893,"byte_end":6790942,"line_start":355,"line_end":355,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790947,"byte_end":6790991,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6790996,"byte_end":6791016,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791021,"byte_end":6791049,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791054,"byte_end":6791057,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791062,"byte_end":6791091,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791096,"byte_end":6791129,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791134,"byte_end":6791139,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791144,"byte_end":6791183,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791188,"byte_end":6791242,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791247,"byte_end":6791252,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791257,"byte_end":6791324,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791329,"byte_end":6791334,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791339,"byte_end":6791378,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791383,"byte_end":6791437,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791442,"byte_end":6791447,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791452,"byte_end":6791459,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791464,"byte_end":6791467,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6791472,"byte_end":6791512,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792742,"byte_end":6792751,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"fn (&self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792140,"byte_end":6792195,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792200,"byte_end":6792203,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792208,"byte_end":6792283,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792288,"byte_end":6792338,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792343,"byte_end":6792346,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792351,"byte_end":6792435,"line_start":401,"line_end":401,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792440,"byte_end":6792443,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792448,"byte_end":6792462,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792467,"byte_end":6792470,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792475,"byte_end":6792482,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792487,"byte_end":6792520,"line_start":406,"line_end":406,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792525,"byte_end":6792528,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792533,"byte_end":6792567,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792572,"byte_end":6792606,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792611,"byte_end":6792665,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792670,"byte_end":6792677,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792682,"byte_end":6792685,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792690,"byte_end":6792730,"line_start":413,"line_end":413,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6796069,"byte_end":6796080,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"fn () -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793157,"byte_end":6793244,"line_start":434,"line_end":434,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793245,"byte_end":6793248,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793249,"byte_end":6793344,"line_start":436,"line_end":436,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793345,"byte_end":6793434,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793435,"byte_end":6793438,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793439,"byte_end":6793532,"line_start":439,"line_end":439,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793533,"byte_end":6793570,"line_start":440,"line_end":440,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793571,"byte_end":6793574,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793575,"byte_end":6793671,"line_start":442,"line_end":442,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793672,"byte_end":6793675,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793676,"byte_end":6793688,"line_start":444,"line_end":444,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793689,"byte_end":6793692,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793693,"byte_end":6793783,"line_start":446,"line_end":446,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793784,"byte_end":6793851,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793852,"byte_end":6793855,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793856,"byte_end":6793870,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793871,"byte_end":6793874,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793875,"byte_end":6793882,"line_start":451,"line_end":451,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793883,"byte_end":6793932,"line_start":452,"line_end":452,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793933,"byte_end":6793978,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793979,"byte_end":6793982,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793983,"byte_end":6794010,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794011,"byte_end":6794014,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794015,"byte_end":6794027,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794028,"byte_end":6794083,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794084,"byte_end":6794130,"line_start":459,"line_end":459,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794131,"byte_end":6794134,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794135,"byte_end":6794209,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794210,"byte_end":6794260,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794261,"byte_end":6794264,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794265,"byte_end":6794294,"line_start":464,"line_end":464,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794295,"byte_end":6794351,"line_start":465,"line_end":465,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794352,"byte_end":6794363,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794364,"byte_end":6794367,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794368,"byte_end":6794449,"line_start":468,"line_end":468,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794450,"byte_end":6794455,"line_start":469,"line_end":469,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794456,"byte_end":6794463,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794464,"byte_end":6794467,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794468,"byte_end":6794562,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794563,"byte_end":6794566,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794567,"byte_end":6794661,"line_start":474,"line_end":474,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794662,"byte_end":6794747,"line_start":475,"line_end":475,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794748,"byte_end":6794751,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794752,"byte_end":6794851,"line_start":477,"line_end":477,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794852,"byte_end":6794950,"line_start":478,"line_end":478,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794951,"byte_end":6794971,"line_start":479,"line_end":479,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794972,"byte_end":6794975,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794976,"byte_end":6794983,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6794984,"byte_end":6795033,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795034,"byte_end":6795065,"line_start":483,"line_end":483,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795066,"byte_end":6795111,"line_start":484,"line_end":484,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795112,"byte_end":6795115,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795116,"byte_end":6795137,"line_start":486,"line_end":486,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795138,"byte_end":6795168,"line_start":487,"line_end":487,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795169,"byte_end":6795174,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795175,"byte_end":6795178,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795179,"byte_end":6795199,"line_start":490,"line_end":490,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795200,"byte_end":6795230,"line_start":491,"line_end":491,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795231,"byte_end":6795261,"line_start":492,"line_end":492,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795262,"byte_end":6795267,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795268,"byte_end":6795271,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795272,"byte_end":6795303,"line_start":495,"line_end":495,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795304,"byte_end":6795332,"line_start":496,"line_end":496,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795333,"byte_end":6795353,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795354,"byte_end":6795390,"line_start":498,"line_end":498,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795391,"byte_end":6795468,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795469,"byte_end":6795472,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795473,"byte_end":6795524,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795525,"byte_end":6795565,"line_start":502,"line_end":502,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795566,"byte_end":6795640,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795641,"byte_end":6795644,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795645,"byte_end":6795733,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795734,"byte_end":6795784,"line_start":506,"line_end":506,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795785,"byte_end":6795837,"line_start":507,"line_end":507,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795838,"byte_end":6795866,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795867,"byte_end":6795870,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795871,"byte_end":6795903,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795904,"byte_end":6795921,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795922,"byte_end":6795935,"line_start":512,"line_end":512,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795936,"byte_end":6795945,"line_start":513,"line_end":513,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795946,"byte_end":6795951,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795952,"byte_end":6795959,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795960,"byte_end":6795963,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795964,"byte_end":6795998,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6795999,"byte_end":6796044,"line_start":518,"line_end":518,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6796045,"byte_end":6796054,"line_start":519,"line_end":519,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802181,"byte_end":7802184,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"fn () -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802135,"byte_end":7802163,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802164,"byte_end":7802173,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802309,"byte_end":7802318,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802240,"byte_end":7802291,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802292,"byte_end":7802301,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":606},"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802428,"byte_end":7802445,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"fn () -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":7802379,"byte_end":7802420,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724112,"byte_end":6724130,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725304,"byte_end":6725312,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727130,"byte_end":6727136,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727180,"byte_end":6727186,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727202,"byte_end":6727208,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":71},{"krate":0,"index":73},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":87},{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740360,"byte_end":6740366,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740690,"byte_end":6740696,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740926,"byte_end":6740932,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741259,"byte_end":6741265,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741357,"byte_end":6741363,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741758,"byte_end":6741764,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741867,"byte_end":6741873,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741973,"byte_end":6741979,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742328,"byte_end":6742334,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743281,"byte_end":6743286,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743799,"byte_end":6743804,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746549,"byte_end":6746554,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":151}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746737,"byte_end":6746742,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747017,"byte_end":6747022,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747143,"byte_end":6747148,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747314,"byte_end":6747319,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":164}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747478,"byte_end":6747483,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747573,"byte_end":6747578,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748031,"byte_end":6748036,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":173}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748121,"byte_end":6748126,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748223,"byte_end":6748228,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748309,"byte_end":6748314,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748773,"byte_end":6748779,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748939,"byte_end":6748945,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748984,"byte_end":6748990,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":198},{"krate":0,"index":199}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749242,"byte_end":6749248,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756581,"byte_end":6756587,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757113,"byte_end":6757119,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757230,"byte_end":6757236,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757290,"byte_end":6757296,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757445,"byte_end":6757451,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757583,"byte_end":6757589,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":234}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757873,"byte_end":6757879,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6758026,"byte_end":6758032,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758830,"byte_end":6758839,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758864,"byte_end":6758873,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758883,"byte_end":6758892,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759185,"byte_end":6759194,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759392,"byte_end":6759401,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759525,"byte_end":6759534,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759708,"byte_end":6759717,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759828,"byte_end":6759839,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":267},{"krate":0,"index":268},{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760299,"byte_end":6760310,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":271}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760457,"byte_end":6760468,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":6770404,"byte_end":6770412,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":289}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":6770532,"byte_end":6770540,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":6774171,"byte_end":6774176,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":6775931,"byte_end":6775942,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778881,"byte_end":6778886,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":327},{"krate":0,"index":331},{"krate":0,"index":334},{"krate":0,"index":335},{"krate":0,"index":336},{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792876,"byte_end":6792881,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793051,"byte_end":6793056,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6799581,"byte_end":6799584,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6799594,"byte_end":6799597,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6800524,"byte_end":6800527,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804036,"byte_end":6804039,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804438,"byte_end":6804441,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804863,"byte_end":6804872,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804882,"byte_end":6804891,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6805566,"byte_end":6805572,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6810311,"byte_end":6810316,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6818839,"byte_end":6818844,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6824817,"byte_end":6824822,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":465}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6824958,"byte_end":6824963,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":467}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6825469,"byte_end":6825473,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6828025,"byte_end":6828029,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":479}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6828562,"byte_end":6828566,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838330,"byte_end":6838335,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838372,"byte_end":6838377,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838393,"byte_end":6838398,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":519},{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6843966,"byte_end":6843971,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6724112,"byte_end":6724130,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":30},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6725304,"byte_end":6725312,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":29737},"to":{"krate":0,"index":41}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727130,"byte_end":6727136,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727180,"byte_end":6727186,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6727202,"byte_end":6727208,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":58},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740360,"byte_end":6740366,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740690,"byte_end":6740696,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":6090}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6740926,"byte_end":6740932,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741259,"byte_end":6741265,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741357,"byte_end":6741363,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741758,"byte_end":6741764,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741867,"byte_end":6741873,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6741973,"byte_end":6741979,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6742328,"byte_end":6742334,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743281,"byte_end":6743286,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":132},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6743799,"byte_end":6743804,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746549,"byte_end":6746554,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6746737,"byte_end":6746742,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747017,"byte_end":6747022,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747143,"byte_end":6747148,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2073}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747314,"byte_end":6747319,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":2086}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747478,"byte_end":6747483,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6747573,"byte_end":6747578,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748031,"byte_end":6748036,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1584}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748121,"byte_end":6748126,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1587}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748223,"byte_end":6748228,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1816}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748309,"byte_end":6748314,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":132},"to":{"krate":2,"index":1819}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748773,"byte_end":6748779,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748939,"byte_end":6748945,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1914}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6748984,"byte_end":6748990,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":183},"to":{"krate":0,"index":128}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6749242,"byte_end":6749248,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":183},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6756581,"byte_end":6756587,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1825}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757113,"byte_end":6757119,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757230,"byte_end":6757236,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1639}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757290,"byte_end":6757296,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1671}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757445,"byte_end":6757451,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1660}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757583,"byte_end":6757589,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6757873,"byte_end":6757879,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":6090}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":6758026,"byte_end":6758032,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":183},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758830,"byte_end":6758839,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758864,"byte_end":6758873,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6758883,"byte_end":6758892,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759185,"byte_end":6759194,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1606}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759392,"byte_end":6759401,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759525,"byte_end":6759534,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1634}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759708,"byte_end":6759717,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":250},"to":{"krate":2,"index":1639}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6759828,"byte_end":6759839,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":264},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760299,"byte_end":6760310,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":6760457,"byte_end":6760468,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":264},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":6770404,"byte_end":6770412,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":284},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":6770532,"byte_end":6770540,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":284},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":6774171,"byte_end":6774176,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":6775931,"byte_end":6775942,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6778881,"byte_end":6778886,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":321},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6792876,"byte_end":6792881,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":6793051,"byte_end":6793056,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":321},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6799581,"byte_end":6799584,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6799594,"byte_end":6799597,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6800524,"byte_end":6800527,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804036,"byte_end":6804039,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804438,"byte_end":6804441,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":381},"to":{"krate":2,"index":6075}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804863,"byte_end":6804872,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":561},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6804882,"byte_end":6804891,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":561},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6805566,"byte_end":6805572,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6810311,"byte_end":6810316,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":412},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":6818839,"byte_end":6818844,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":412},"to":{"krate":0,"index":450}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6824817,"byte_end":6824822,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":568},"to":{"krate":2,"index":1895}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6824958,"byte_end":6824963,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6825469,"byte_end":6825473,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6828025,"byte_end":6828029,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":572},"to":{"krate":2,"index":2097}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":6828562,"byte_end":6828566,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":455},"to":{"krate":2,"index":4858}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838330,"byte_end":6838335,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":1916}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838372,"byte_end":6838377,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":1904}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6838393,"byte_end":6838398,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\rafat\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":6843966,"byte_end":6843971,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":589},"to":{"krate":2,"index":2097}}]}